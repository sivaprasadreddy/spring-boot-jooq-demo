/*
 * This file is generated by jOOQ.
 */
package com.sivalabs.bookmarks.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Addresses implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final String street;
    private final String city;
    private final String state;
    private final String zip;
    private final String country;

    public Addresses(Addresses value) {
        this.id = value.id;
        this.street = value.street;
        this.city = value.city;
        this.state = value.state;
        this.zip = value.zip;
        this.country = value.country;
    }

    public Addresses(
        Long id,
        String street,
        String city,
        String state,
        String zip,
        String country
    ) {
        this.id = id;
        this.street = street;
        this.city = city;
        this.state = state;
        this.zip = zip;
        this.country = country;
    }

    /**
     * Getter for <code>public.addresses.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.addresses.street</code>.
     */
    public String getStreet() {
        return this.street;
    }

    /**
     * Getter for <code>public.addresses.city</code>.
     */
    public String getCity() {
        return this.city;
    }

    /**
     * Getter for <code>public.addresses.state</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Getter for <code>public.addresses.zip</code>.
     */
    public String getZip() {
        return this.zip;
    }

    /**
     * Getter for <code>public.addresses.country</code>.
     */
    public String getCountry() {
        return this.country;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Addresses other = (Addresses) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.street == null) {
            if (other.street != null)
                return false;
        }
        else if (!this.street.equals(other.street))
            return false;
        if (this.city == null) {
            if (other.city != null)
                return false;
        }
        else if (!this.city.equals(other.city))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.zip == null) {
            if (other.zip != null)
                return false;
        }
        else if (!this.zip.equals(other.zip))
            return false;
        if (this.country == null) {
            if (other.country != null)
                return false;
        }
        else if (!this.country.equals(other.country))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.street == null) ? 0 : this.street.hashCode());
        result = prime * result + ((this.city == null) ? 0 : this.city.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.zip == null) ? 0 : this.zip.hashCode());
        result = prime * result + ((this.country == null) ? 0 : this.country.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Addresses (");

        sb.append(id);
        sb.append(", ").append(street);
        sb.append(", ").append(city);
        sb.append(", ").append(state);
        sb.append(", ").append(zip);
        sb.append(", ").append(country);

        sb.append(")");
        return sb.toString();
    }
}
